openapi: 3.0.0
info:
  title: Basketball API
  version: 1.0.0
  description: API pour récupérer les informations de basketball ainsi que des prédictions.

servers:
  - url: "http://62.72.18.63:11042"
    description: "Serveur principal"

tags:
  - name: Aba
    description: Informations de base des joueurs ABA
  - name: Advanced
    description: Informations avancées des joueurs
  - name: Match
    description: Informations sur les matchs
  - name: Nba
    description: Informations de base des joueurs NBA
  - name: OpponentStats
    description: Statistiques des adversaires
  - name: Players
    description: Gestion des joueurs
  - name: PlayerDirectory
    description: Annuaire des joueurs
  - name: PlayerParMatch
    description: Statistiques des joueurs par match
  - name: Prediction
    description: Prédictions des matchs
  - name: Teams
    description: Gestion des équipes
  - name: TeamStats
    description: Statistiques des équipes par match
  - name: Users
    description: Gestion et authentification des utilisateurs

paths:
  /abas:
    get:
      summary: Obtenez toutes les informations de la table aba
      tags: [Aba]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des données aba
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ABA"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Aucune donnée aba trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No abaS info found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching abaS"
  /aba/{saison}/{abr_equipe}:
    parameters:
      - in: path
        name: saison
        required: true
        schema:
          type: integer
          example: 2023
        description: Année de la saison
      - in: path
        name: abr_equipe
        required: true
        schema:
          type: string
          example: "LAL"
        description: Abréviation de l'équipe
    get:
      summary: Obtenez les informations aba pour une équipe et une saison
      tags: [Aba]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Donnée aba trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ABA"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameter"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Donnée aba non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Aba info not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching aba"

  /advanceds:
    get:
      summary: Obtenez toutes les statistiques avancées des joueurs
      tags: [Advanced]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des statistiques avancées des joueurs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Advanced"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Aucune statistique avancée trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching advanced stats"
  /advanced:
    post:
      summary: Crée une statistique avancée pour un joueur (Admin uniquement)
      tags: [Advanced]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Advanced"
      responses:
        "201":
          description: Statistique avancée créée
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player's advanced info created"
        "400":
          description: Données manquantes ou invalides
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missign parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating player's advanced info"
  /advanced/{id_joueur}/{saison}/{abr_equipe}:
    parameters:
      - in: path
        name: id_joueur
        required: true
        schema:
          type: integer
        description: Identifiant du joueur
      - in: path
        name: saison
        required: true
        schema:
          type: integer
        description: Année de la saison
      - in: path
        name: abr_equipe
        required: true
        schema:
          type: string
        description: Abréviation de l'équipe
    get:
      summary: Obtenez des statistiques avancées sur un joueur par ID
      tags: [Advanced]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Statistiques avancées trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Advanced"
        "400":
          description: ID manquant
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Statistiques avancées non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player's advanced info not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching player's advanced info"
    patch:
      summary: Met à jour les statistiques avancées d’un joueur (Admin uniquement)
      tags: [Advanced]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Advanced"
      responses:
        "200":
          description: Statistique avancée mise à jour
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player's advanced info updated"
        "400":
          description: Données ou paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Statistique avancée non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player's advanced info not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating player's advanced info"
    delete:
      summary: Supprime les statistiques avancées d’un joueur (Admin uniquement)
      tags: [Advanced]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Statistique avancée supprimée
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player's advanced info deleted"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Statistique avancée non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player's advanced info not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting player's advanced info"

  /matchs:
    get:
      summary: Obtenez tous les matchs
      security:
        - bearerAuth: []
      tags: [Match]
      responses:
        200:
          description: Liste des matchs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Match"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        404:
          description: Aucun match trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Match not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching matches"
  /match:
    post:
      summary: Créez un nouveau match (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [Match]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Match"
      responses:
        201:
          description: Match créé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Match created"
        "400":
          description: ID manquant
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        403:
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating match"
  /match/{game_id}:
    parameters:
      - in: path
        name: game_id
        required: true
        schema:
          type: integer
        description: ID du match
    get:
      summary: Obtenez les détails d'un match par son ID
      tags: [Match]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Détails du match trouvés
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Match"
        403:
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        404:
          description: Match non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Match not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching match"
    patch:
      summary: Modifiez un match existant (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [Match]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Match"
      responses:
        200:
          description: Match modifié avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Match updated"
        403:
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Match non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Match not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating match"
    delete:
      summary: Supprimez un match existant (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [Match]
      responses:
        200:
          description: Match supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Match deleted"
        403:
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Match non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Match not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting match"

  /nbas:
    get:
      summary: Obtenez toutes les informations de la table NBA
      tags: [Nba]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des données NBA
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/NBA"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Aucune donnée NBA trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No nbas info found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching nbas"
  /nba/{saison}/{abr_equipe}:
    parameters:
      - in: path
        name: saison
        required: true
        schema:
          type: integer
          example: 2023
        description: Année de la saison
      - in: path
        name: abr_equipe
        required: true
        schema:
          type: string
          example: "LAL"
        description: Abréviation de l'équipe
    get:
      summary: Obtenez les informations NBA pour une équipe et une saison (auth requise)
      tags: [Nba]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Donnée NBA trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/NBA"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameter"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Donnée NBA non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Nba info not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching nba"

  /opponentsStatsParMatch:
    get:
      summary: Obtenez toutes les statistiques des adversaires par match
      security:
        - bearerAuth: []
      tags: [OpponentStats]
      responses:
        200:
          description: Liste des statistiques des adversaires par match
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OpponentStatsParMatch"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."

        404:
          description: Aucune statistique d'adversaire trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No opponent stats found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching opponent stats"
  /opponentStatsParMatch:
    post:
      tags: [OpponentStats]
      summary: Crée de nouvelles statistiques d'adversaire par match (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpponentStatsParMatch"
      responses:
        "201":
          description: Statistiques d'adversaire créées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Opponent's stats par match created"
        "400":
          description: Données invalides
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "404":
          description: Équipe non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Team not found"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating opponent's stats par match"
  /opponentStatsParMatch/{saison}/{abr_equipe}:
    parameters:
      - in: path
        name: saison
        required: true
        schema:
          type: integer
        description: Année de la saison
      - in: path
        name: abr_equipe
        required: true
        schema:
          type: string
        description: Abréviation de l'équipe
    get:
      summary: Obtenez les statistiques des adversaires par saison et équipe
      security:
        - bearerAuth: []
      tags: [OpponentStats]
      responses:
        200:
          description: Statistiques des adversaires trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/OpponentStatsParMatch"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."

        400:
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameter"
        404:
          description: Statistiques des adversaires non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No opponent stats found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching opponent stats"
    patch:
      tags: [OpponentStats]
      summary: Met à jour les statistiques d'adversaire pour une équipe (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpponentStatsParMatch"
      responses:
        "201":
          description: Statistiques d'adversaire mises à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Opponent's stats par match updated"
        "400":
          description: Données invalides ou paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "404":
          description: Équipe ou statistiques non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Opponent's stats par match not found"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating opponent's stats par match"
    delete:
      tags: [OpponentStats]
      summary: Supprime les statistiques d'adversaire pour une équipe (Admin uniquement)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Statistiques d'adversaire supprimées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Opponent's stats par match deleted"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "404":
          description: Statistiques d'adversaire non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Opponent's stats par match not found"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting opponent's stats par match"

  /players:
    get:
      summary: Récupère la liste des joueurs
      tags: [Players]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des joueurs récupérée
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PlayerCareerInfo"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Aucun joueur trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No players found"
        "500":
          description: Serveur error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching players"
  /player:
    post:
      summary: Ajoute un joueur (Admin uniquement)
      tags: [Players]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_joueur
                - nom_joueur
                - prem_saison
                - dern_saison
              properties:
                id_joueur:
                  type: integer
                  example: 123
                nom_joueur:
                  type: string
                  example: "John Doe"
                prem_saison:
                  type: integer
                  example: 1990
                dern_saison:
                  type: integer
                  example: 2000
      responses:
        "201":
          description: Joueur ajouté
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player added"
        "400":
          description: Erreur de validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing data"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Serveur error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while adding player"
  /player/{id_joueur}:
    parameters:
      - name: id_joueur
        in: path
        required: true
        schema:
          type: integer
        description: ID du joueur
    get:
      tags: [Players]
      summary: Récupère un joueur par son ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Le joueur trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerCareerInfo"
        "400":
          description: Parameters manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching player"
    patch:
      tags: [Players]
      summary: Met à jour les informations d'un joueur (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nom_joueur
                - prem_saison
                - dern_saison
              properties:
                nom_joueur:
                  type: string
                  example: "John Doe"
                annee_naissance:
                  type: integer
                  example: 1955
                prem_saison:
                  type: integer
                  example: 1985
                dern_saison:
                  type: integer
                  example: 2000
      responses:
        "200":
          description: Joueur mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player updated successfully"
        "400":
          description: Parameters manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating player"
    delete:
      tags: [Players]
      summary: Supprime un joueur par son ID (Admin uniquement)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Joueur supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player deleted"
        "400":
          description: Parameters manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                example: "Player not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting player"

  /playersDirectory:
    get:
      summary: Obtenez le répertoire complet des joueurs
      security:
        - bearerAuth: []
      tags: [PlayerDirectory]
      responses:
        "200":
          description: Liste du répertoire des joueurs
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PlayerDirectory"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."

        "404":
          description: Aucun répertoire de joueurs trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No player directory found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching user"
  /playerDirectory:
    post:
      summary: Ajoutez un joueur au répertoire (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [PlayerDirectory]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerDirectory"
      responses:
        "200":
          description: Joueur ajouté avec succès
          content:
            application/json:
              schema:
                type: object
                example: "Player's directory created"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameter"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating user"
  /playerDirectory/{nom_joueur}/{dateNaissance}:
    parameters:
      - in: path
        name: nom_joueur
        required: true
        schema:
          type: string
          example: "michael jordan"
          description: Nom du joueur
        description: Nom du joueur

      - in: path
        name: dateNaissance
        required: true
        schema:
          type: string
          format: date
          example: "1990-01-01"
        description: Date de naissance
    get:
      summary: Obtenez le répertoire d'un joueur par nom et date de naissance
      security:
        - bearerAuth: []
      tags: [PlayerDirectory]
      responses:
        "200":
          description: Répertoire du joueur trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PlayerDirectory"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing ID"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Répertoire du joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching user"
    patch:
      tags: [PlayerDirectory]
      summary: Met à jour les informations d'un joueur (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerDirectory"
      responses:
        "200":
          description: Informations du joueur mises à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player's directory updated"
        "400":
          description: Données invalides ou paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player's directory not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating player's directory"
    delete:
      tags: [PlayerDirectory]
      summary: Supprime un joueur (Admin uniquement)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Joueur supprimé
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Player's directory deleted"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Joueur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Player's directory not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting player's directory"

  /playersParMatch:
    get:
      summary: Obtenez toutes les statistiques des joueurs par match
      security:
        - bearerAuth: []
      tags: [PlayerParMatch]
      responses:
        200:
          description: Liste des statistiques des joueurs par match
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PlayerParMatch"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."

        404:
          description: Aucune statistique de joueur trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stats not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching user"
  /playerParMatch:
    post:
      summary: Ajoutez les statistiques des joueurs par match (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [PlayerParMatch]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerParMatch"
      responses:
        "201":
          description: Statistiques du joueur ajoutées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PlayerParMatch"
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while adding user"
  /playerParMatch/{id_joueur}/{saison}/{abr_team}:
    parameters:
      - in: path
        name: id_joueur
        required: true
        schema:
          type: integer
        description: Identifiant du joueur
      - in: path
        name: saison
        required: true
        schema:
          type: integer
        description: Année de la saison
      - in: path
        name: abr_equipe
        required: true
        schema:
          type: string
        description: Abréviation de l'équipe
    get:
      summary: Obtenez les statistiques des joueurs par match par ID, saison et équipe
      security:
        - bearerAuth: []
      tags: [PlayerParMatch]
      responses:
        200:
          description: Statistiques du joueur trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PlayerParMatch"
        400:
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing ABR"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        404:
          description: Statistiques du joueur non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching user"
    patch:
      summary: Mettez à jour les statistiques des joueurs par match par ID, saison et équipe (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [PlayerParMatch]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerParMatch"
      responses:
        200:
          description: Statistiques du joueur mises à jour
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/PlayerParMatch"
        400:
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        403:
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Statistiques du joueur non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating user"
    delete:
      summary: Supprimez les statistiques des joueurs par match par ID, saison et équipe (Admin uniquement)
      security:
        - bearerAuth: []
      tags: [PlayerParMatch]
      responses:
        200:
          description: Statistiques du joueur supprimées
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Stat deleted"
        400:
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        403:
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Statistiques du joueur non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting user"

  /prediction/team/{abr_home}/{abr_away}:
    parameters:
      - in: path
        name: abr_home
        required: true
        schema:
          type: string
          example: "LAL"
        description: Abréviation de l'équipe à domicile
      - in: path
        name: abr_away
        required: true
        schema:
          type: string
          example: "BOS"
        description: Abréviation de l'équipe à l'extérieur
    get:
      summary: Prédiction du match entre deux équipes
      tags: [Prediction]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Prédiction du match avec les statistiques simulées
          content:
            application/json:
              schema:
                type: object
                properties:
                  prediction:
                    type: object
                    properties:
                      winner:
                        type: string
                        example: "abr_home"
                      percent:
                        type: number
                        format: float
                        example: 70
                  matchPrediction:
                    type: object
                    properties:
                      minute_par_match:
                        type: number
                        example: 241.7
                      fg_par_match:
                        type: number
                        example: 43.29
                      fga_par_match:
                        type: number
                        example: 91.84
                      fg_pourcent:
                        type: number
                        example: 0.4715
                      x3p_par_match:
                        type: number
                        example: 13.49
                      x3pa_par_match:
                        type: number
                        example: 37.10
                      x3p_pourcent:
                        type: number
                        example: 0.3627
                      x2p_par_match:
                        type: number
                        example: 29.82
                      x2pa_par_match:
                        type: number
                        example: 54.71
                      x2p_pourcent:
                        type: number
                        example: 0.5448
                      ft_par_match:
                        type: number
                        example: 17.66
                      fta_par_match:
                        type: number
                        example: 22.35
                      ft_pourcent:
                        type: number
                        example: 0.7903
                      orb_par_match:
                        type: number
                        example: 11.83
                      drb_par_match:
                        type: number
                        example: 33.04
                      trb_par_match:
                        type: number
                        example: 44.86
                      ast_par_match:
                        type: number
                        example: 27.74
                      stl_par_match:
                        type: number
                        example: 8.03
                      blk_par_match:
                        type: number
                        example: 4.75
                      tov_par_match:
                        type: number
                        example: 14.26
                      pf_par_match:
                        type: number
                        example: 19.20
                      pts_par_match:
                        type: number
                        example: 117.75
                      possession:
                        type: number
                        example: 104.10
        "400":
          description: Paramètres manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login requis)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while predicting match"

  /teams:
    get:
      tags: [Teams]
      security:
        - bearerAuth: []
      summary: Récupère toutes les équipes
      responses:
        "200":
          description: Liste des équipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Aucune équipe trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No teams found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching teams"
  /team:
    post:
      tags: [Teams]
      security:
        - bearerAuth: []
      summary: Crée une nouvelle équipe (Admin uniquement)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
      responses:
        "201":
          description: Équipe créée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Team created"
        "400":
          description: Données invalides
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid data"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating team"
  /teams/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        description: ID de l'équipe
    get:
      tags: [Teams]
      security:
        - bearerAuth: []
      summary: Récupère une équipe par son ID
      responses:
        "200":
          description: L'équipe trouvée
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "404":
          description: Équipe non trouvée
          content:
            text/plain:
              schema:
                type: string
                example: "Team not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching team"
    patch:
      tags: [Teams]
      security:
        - bearerAuth: []
      summary: Met à jour une équipe par son ID (Admin uniquement)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de l'équipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
      responses:
        "200":
          description: Équipe mise à jour
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Team updated successfully"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Équipe non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Team not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating team"
    delete:
      tags: [Teams]
      security:
        - bearerAuth: []
      summary: Supprime une équipe par son ID (Admin uniquement)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de l'équipe
      responses:
        "200":
          description: Équipe supprimée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Team deleted"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "404":
          description: Équipe non trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Team not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting team"

  /teamsStatsParMatch:
    get:
      summary: Obtenez toutes les statistiques des équipes par match
      security:
        - bearerAuth: []
      tags: [TeamStats]
      responses:
        200:
          description: Liste des statistiques des équipes par match
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamStatsParMatch"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        404:
          description: Aucune statistique d'équipe trouvée
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stats not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching stats"
  /teamStatsParMatch:
    post:
      summary: Ajoutez les statistiques d'une équipe par match (Admin uniquement)
      tags: [TeamStats]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamStatsParMatch"
      responses:
        200:
          description: Statistiques d'équipe ajoutées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/TeamStatsParMatch"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while adding stats"
  /teamStatsParMatch/{saison}/{arb_team}:
    parameters:
      - in: path
        name: saison
        required: true
        schema:
          type: integer
        description: Année de la saison
      - in: path
        name: arb
        required: true
        schema:
          type: string
        description: Abréviation de l'équipe
    get:
      summary: Obtenez les statistiques d'une équipe par match en fonction de la saison, de l'équipe, de la ligue et de la qualification
      tags: [TeamStats]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Statistiques d'équipe trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/TeamStatsParMatch"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."

        404:
          description: Statistiques d'équipe non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching stats"
    patch:
      summary: Mettez à jour les statistiques d'une équipe par match en fonction de la saison, de l'équipe, de la ligue et de la qualification (Admin uniquement)
      tags: [TeamStats]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamStatsParMatch"
      responses:
        200:
          description: Statistiques d'équipe mises à jour avec succès
          content:
            application/json:
              schema:
                type: string
                example: "Stats updated"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Statistiques d'équipe non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating stats"
    delete:
      summary: Supprimez les statistiques d'une équipe par match en fonction de la saison, de l'équipe, de la ligue et de la qualification (Admin uniquement)
      tags: [TeamStats]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Statistiques d'équipe supprimées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Stats deleted"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        404:
          description: Statistiques d'équipe non trouvées
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Stat not found"
        500:
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting stats"

  /users:
    get:
      tags: [Users]
      summary: Récupère tous les utilisateurs
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des utilisateurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: Aucun utilisateur trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No users found"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching users"
  /user:
    post:
      tags: [Users]
      summary: Crée un nouvel utilisateur (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        "201":
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created"
        "400":
          description: ID manquant
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing parameters"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while creating user"
  /user/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
        description: ID de l'utilisateur
    get:
      tags: [Users]
      summary: Récupère un utilisateur par son ID
      security:
        - bearerAuth: []
      responses:
        "200":
          description: L'utilisateur trouvé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        "403":
          description: Accès refusé (login)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be logged in."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while fetching user"
    patch:
      tags: [Users]
      summary: Met à jour un utilisateur (Admin uniquement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "updated@example.com"
                password:
                  type: string
                  format: password
                  example: "newpassword123"
      responses:
        "200":
          description: Utilisateur mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated"
        "400":
          description: Requête invalide
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email is missing"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while updating user"
    delete:
      tags: [Users]
      summary: Supprime un utilisateur (Admin uniquement)
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Utilisateur supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User deleted"
        "400":
          description: Requête invalide
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        "403":
          description: Accès refusé (login & admin)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Access denied. You must be an admin."
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while deleting user"
  /user/login:
    post:
      tags: [Users]
      summary: Connecte un utilisateur et retourne un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        "201":
          description: Connexion réussie
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  userId:
                    type: integer
                    example: 1
        "400":
          description: Requête invalide
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Password is incorrect"
        "404":
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"
        "500":
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error while logging in"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Identifiant unique de l'utilisateur
        password:
          type: string
          description: Mot de passe de l'utilisateur
        email:
          type: string
          format: email
          description: Email unique de l'utilisateur
        is_admin:
          type: boolean
          description: Indique si l'utilisateur est administrateur
          default: false
      required:
        - id
        - password
        - email

    PlayerCareerInfo:
      type: object
      properties:
        id_joueur:
          type: integer
          format: int32
          description: Identifiant unique du joueur
          example: 1
        nom_joueur:
          type: string
          maxLength: 100
          description: Nom du joueur
        annee_naissance:
          type: integer
          format: int32
          nullable: true
          description: Année de naissance du joueur
        prem_saison:
          type: integer
          format: int32
          description: Première saison du joueur
        dern_saison:
          type: integer
          format: int32
          description: Dernière saison du joueur
      required:
        - id_joueur
        - nom_joueur
        - prem_saison
        - dern_saison

    PlayerParMatch:
      type: object
      properties:
        saison:
          type: integer
          format: int32
          description: Saison du match
        id_joueur:
          type: integer
          format: int32
          description: Identifiant unique du joueur
        nom_joueur:
          type: string
          maxLength: 100
          description: Nom du joueur
        annee_naissance:
          type: integer
          format: int32
          nullable: true
          description: Année de naissance du joueur
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        minutes_jouees:
          type: number
          format: float
          nullable: true
          description: Minutes jouées dans le match
        pourcent_fg:
          type: number
          format: float
          nullable: true
          description: Pourcentage de field goals
        pourcent_trois_pts:
          type: number
          format: float
          nullable: true
          description: Pourcentage de tirs à trois points
        pourcent_efg:
          type: number
          format: float
          nullable: true
          description: Pourcentage de effective field goal
        pourcent_ft:
          type: number
          format: float
          nullable: true
          description: Pourcentage de lancers francs
        rebond:
          type: integer
          format: int32
          nullable: true
          description: Nombre de rebonds
        passe:
          type: integer
          format: int32
          nullable: true
          description: Nombre de passes décisives
        interception:
          type: integer
          format: int32
          nullable: true
          description: Nombre d'interceptions
        contre:
          type: integer
          format: int32
          nullable: true
          description: Nombre de contres
        points:
          type: integer
          format: int32
          nullable: true
          description: Points marqués
      required:
        - saison
        - id_joueur
        - nom_joueur
        - abr_equipe

    Advanced:
      type: object
      properties:
        id_joueur:
          type: integer
          format: int32
          description: Identifiant unique du joueur
        saison:
          type: integer
          format: int32
          description: Saison
        nom_joueur:
          type: string
          maxLength: 100
          description: Nom du joueur
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        poste:
          type: string
          maxLength: 100
          description: Poste du joueur
        per:
          type: integer
          format: int32
          nullable: true
          description: Player Efficiency Rating
        annee_naissance:
          type: integer
          format: int32
          nullable: true
          description: Année de naissance du joueur
      required:
        - id_joueur
        - saison
        - nom_joueur
        - abr_equipe
        - poste

    OpponentStatsParMatch:
      type: object
      properties:
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        saison:
          type: integer
          format: int32
          description: Saison
        lg:
          type: string
          maxLength: 3
          nullable: true
          description: Ligue
        team_name:
          type: string
          maxLength: 100
          nullable: true
          description: Nom de l'équipe
        qualif:
          type: boolean
          description: Indicateur de qualification
        partie_jouee:
          type: integer
          format: int32
          nullable: true
          description: Nombre de parties jouées
        minute_par_match:
          type: number
          format: float
          nullable: true
          description: Minutes jouées par match
        opp_fg_par_match:
          type: number
          format: float
          nullable: true
          description: Field goals de l'adversaire par match
        opp_fga_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de field goals adverses par match
        opp_fg_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de field goals adverses
        opp_x3p_par_match:
          type: number
          format: float
          nullable: true
          description: Trois points adverses par match
        opp_x3pa_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de trois points adverses par match
        opp_x3p_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de trois points adverses
        opp_x2p_par_match:
          type: number
          format: float
          nullable: true
          description: Deux points adverses par match
        opp_x2pa_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de deux points adverses par match
        opp_x2p_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de deux points adverses
        opp_ft_par_match:
          type: number
          format: float
          nullable: true
          description: Lancers francs adverses par match
        opp_fta_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de lancers francs adverses par match
        opp_ft_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de lancers francs adverses
        opp_orb_par_match:
          type: number
          format: float
          nullable: true
          description: Rebonds offensifs adverses par match
        opp_drb_par_match:
          type: number
          format: float
          nullable: true
          description: Rebonds défensifs adverses par match
        opp_trb_par_match:
          type: number
          format: float
          nullable: true
          description: Total des rebonds adverses par match
        opp_ast_par_match:
          type: number
          format: float
          nullable: true
          description: Passes décisives adverses par match
        opp_stl_par_match:
          type: number
          format: float
          nullable: true
          description: Interceptions adverses par match
        opp_blk_par_match:
          type: number
          format: float
          nullable: true
          description: Contres adverses par match
        opp_tov_par_match:
          type: number
          format: float
          nullable: true
          description: Transmissions de ballon adverses par match
        opp_pf_par_match:
          type: number
          format: float
          nullable: true
          description: Fautes personnelles adverses par match
        opp_pts_par_match:
          type: number
          format: float
          nullable: true
          description: Points adverses par match
        opp_possession:
          type: number
          format: float
          nullable: true
          description: Possession adverse
      required:
        - abr_equipe
        - saison

    PlayerDirectory:
      type: object
      properties:
        nom_joueur:
          type: string
          maxLength: 100
          description: Nom du joueur
        date_naissance:
          type: string
          format: date
          description: Date de naissance du joueur
        taille:
          type: integer
          format: int32
          nullable: true
          description: Taille du joueur
        poids:
          type: integer
          format: int32
          nullable: true
          description: Poids du joueur
      required:
        - nom_joueur
        - date_naissance

    Team:
      type: object
      properties:
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        saison:
          type: integer
          format: int32
          description: Saison
        team_name:
          type: string
          maxLength: 100
          description: Nom de l'équipe
      required:
        - abr_equipe
        - saison
        - team_name

    TeamStatsParMatch:
      type: object
      properties:
        saison:
          type: integer
          format: int32
          description: Saison
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        lg:
          type: string
          maxLength: 3
          nullable: true
          description: Ligue
        team_name:
          type: string
          maxLength: 100
          nullable: true
          description: Nom de l'équipe
        qualif:
          type: boolean
          description: Indicateur de qualification
        partie_jouee:
          type: integer
          format: int32
          nullable: true
          description: Nombre de parties jouées
        minute_par_match:
          type: number
          format: float
          nullable: true
          description: Minutes jouées par match
        fg_par_match:
          type: number
          format: float
          nullable: true
          description: Field goals par match
        fga_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de field goals par match
        fg_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de field goals
        x3p_par_match:
          type: number
          format: float
          nullable: true
          description: Trois points par match
        x3pa_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de trois points par match
        x3p_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de trois points
        x2p_par_match:
          type: number
          format: float
          nullable: true
          description: Deux points par match
        x2pa_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de deux points par match
        x2p_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de deux points
        ft_par_match:
          type: number
          format: float
          nullable: true
          description: Lancers francs par match
        fta_par_match:
          type: number
          format: float
          nullable: true
          description: Tentatives de lancers francs par match
        ft_pourcent:
          type: number
          format: float
          nullable: true
          description: Pourcentage de lancers francs
        orb_par_match:
          type: number
          format: float
          nullable: true
          description: Rebonds offensifs par match
        drb_par_match:
          type: number
          format: float
          nullable: true
          description: Rebonds défensifs par match
        trb_par_match:
          type: number
          format: float
          nullable: true
          description: Total des rebonds par match
        ast_par_match:
          type: number
          format: float
          nullable: true
          description: Passes décisives par match
        stl_par_match:
          type: number
          format: float
          nullable: true
          description: Interceptions par match
        blk_par_match:
          type: number
          format: float
          nullable: true
          description: Contres par match
        pf_par_match:
          type: number
          format: float
          nullable: true
          description: Fautes personnelles par match
        pts_par_match:
          type: number
          format: float
          nullable: true
          description: Points par match
        possession:
          type: number
          format: float
          nullable: true
          description: Possessions
      required:
        - saison
        - abr_equipe

    Match:
      type: object
      properties:
        game_id:
          type: integer
          format: int32
          description: Identifiant unique du match
        game_date_est:
          type: string
          format: date
          nullable: true
          description: Date du match (EST)
        team_abbreviation_home:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe à domicile
        pts_home:
          type: integer
          format: int32
          description: Points marqués par l'équipe à domicile
        team_abbreviation_away:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe à l'extérieur
        pts_away:
          type: integer
          format: int32
          description: Points marqués par l'équipe à l'extérieur
      required:
        - game_id
        - team_abbreviation_home
        - pts_home
        - team_abbreviation_away
        - pts_away

    ABA:
      type: object
      properties:
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        saison:
          type: integer
          format: int32
          description: Saison
        qualif:
          type: boolean
          nullable: true
          description: Indicateur de qualification
      required:
        - abr_equipe
        - saison

    NBA:
      type: object
      properties:
        abr_equipe:
          type: string
          maxLength: 3
          description: Abréviation de l'équipe
        saison:
          type: integer
          format: int32
          description: Saison
        qualif:
          type: boolean
          nullable: true
          description: Indicateur de qualification
      required:
        - abr_equipe
        - saison
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
