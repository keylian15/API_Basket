generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int      @id @default(autoincrement())
  password String
  email    String   @unique
  is_admin Boolean? @default(false)
}

model player_career_info {
  id_joueur          Int                  @id
  nom_joueur         String               @db.VarChar(100)
  annee_naissance    Int?
  prem_saison        Int
  dern_saison        Int
  classement_joueurs classement_joueurs[]
  player_par_match   player_par_match[]
}

model player_par_match {
  saison             Int
  id_joueur          Int
  nom_joueur         String             @db.VarChar(100)
  annee_naissance    Int?
  abr_equipe         String             @db.VarChar(3)
  minutes_jouees     Float?
  pourcent_fg        Float?
  pourcent_trois_pts Float?
  pourcent_efg       Float?
  pourcent_ft        Float?
  rebond             Int?
  passe              Int?
  interception       Int?
  contre             Int?
  points             Int?
  player_career_info player_career_info @relation(fields: [id_joueur], references: [id_joueur], onDelete: NoAction, onUpdate: NoAction, map: "fk_player_par_match_player_career_info")

  @@id([saison, id_joueur, abr_equipe])
}

model advanced {
  id_joueur       Int
  saison          Int
  nom_joueur      String @db.VarChar(100)
  abr_equipe      String @db.VarChar(3)
  poste           String @db.VarChar(100)
  per             Int?
  annee_naissance Int?

  @@id([id_joueur, saison, abr_equipe])
}

model opponent_stats_par_match {
  saison             Int
  abr_equipe         String  @db.VarChar(3)
  lg                 String? @db.VarChar(3)
  team_name          String? @db.VarChar(100)
  qualif             Boolean
  partie_jouee       Int?
  minute_par_match   Float?
  opp_fg_par_match   Float?
  opp_fga_par_match  Float?
  opp_fg_pourcent    Float?
  opp_x3p_par_match  Float?
  opp_x3pa_par_match Float?
  opp_x3p_pourcent   Float?
  opp_x2p_par_match  Float?
  opp_x2pa_par_match Float?
  opp_x2p_pourcent   Float?
  opp_ft_par_match   Float?
  opp_fta_par_match  Float?
  opp_ft_pourcent    Float?
  opp_orb_par_match  Float?
  opp_drb_par_match  Float?
  opp_trb_par_match  Float?
  opp_ast_par_match  Float?
  opp_stl_par_match  Float?
  opp_blk_par_match  Float?
  opp_tov_par_match  Float?
  opp_pf_par_match   Float?
  opp_pts_par_match  Float?
  opp_possession     Float?
  team               team    @relation(fields: [abr_equipe, saison], references: [abr_equipe, saison], onDelete: NoAction, onUpdate: NoAction)

  @@id([abr_equipe, saison, qualif])
}

model player_directory {
  nom_joueur     String   @db.VarChar(100)
  date_naissance DateTime @db.Date
  taille         Int?
  poids          Int?

  @@id([nom_joueur, date_naissance])
}

model team {
  abr_equipe               String                     @db.VarChar(3)
  saison                   Int
  team_name                String                     @db.VarChar(100)
  aba                      aba?
  nba                      nba?
  opponent_stats_par_match opponent_stats_par_match[]
  team_stats_par_match     team_stats_par_match[]

  @@id([abr_equipe, saison])
}

model match {
  game_id                Int       @id
  game_date_est          DateTime? @db.Date
  team_abbreviation_home String    @db.VarChar(3)
  pts_home               Int
  team_abbreviation_away String    @db.VarChar(3)
  pts_away               Int
}

model aba {
  abr_equipe String   @db.VarChar(3)
  saison     Int
  qualif     Boolean?
  team       team     @relation(fields: [abr_equipe, saison], references: [abr_equipe, saison], onDelete: NoAction, onUpdate: NoAction)

  @@id([abr_equipe, saison])
}

model nba {
  abr_equipe String   @db.VarChar(3)
  saison     Int
  qualif     Boolean?
  team       team     @relation(fields: [abr_equipe, saison], references: [abr_equipe, saison], onDelete: NoAction, onUpdate: NoAction)

  @@id([abr_equipe, saison])
}

model classement_joueurs {
  id                 Int                 @id @default(autoincrement())
  nom_joueur         String?             @db.VarChar(100)
  abr_equipe         String?             @db.VarChar(3)
  saison             Int?
  classement_type    String?             @db.VarChar(50)
  valeur             Float?              @db.Real
  id_joueur          Int?
  player_career_info player_career_info? @relation(fields: [id_joueur], references: [id_joueur], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_joueur")
}

model team_stats_par_match {
  saison           Int
  abr_equipe       String  @db.VarChar(3)
  lg               String? @db.VarChar(3)
  qualif           Boolean
  partie_jouee     Int?
  minute_par_match Float?
  fg_par_match     Float?
  fga_par_match    Float?
  fg_pourcent      Float?
  x3p_par_match    Float?
  x3pa_par_match   Float?
  x3p_pourcent     Float?
  x2p_par_match    Float?
  x2pa_par_match   Float?
  x2p_pourcent     Float?
  ft_par_match     Float?
  fta_par_match    Float?
  ft_pourcent      Float?
  orb_par_match    Float?
  drb_par_match    Float?
  trb_par_match    Float?
  ast_par_match    Float?
  stl_par_match    Float?
  blk_par_match    Float?
  tov_par_match    Float?
  pf_par_match     Float?
  pts_par_match    Float?
  possession       Float?
  team             team    @relation(fields: [abr_equipe, saison], references: [abr_equipe, saison], onDelete: NoAction, onUpdate: NoAction)

  @@id([saison, abr_equipe, qualif])
}

model match {
  game_id                Int       @id
  game_date_est          DateTime? @db.Date
  team_abbreviation_home String    @db.VarChar(3)
  pts_home               Int
  team_abbreviation_away String    @db.VarChar(3)
  pts_away               Int
}
